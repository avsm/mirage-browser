{ "module": 
  { "name": "Random",
    "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli",
    "location": 
      { "implementation": "unknown",
        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|0" },
    "info": 
      { "description": "Pseudo-random number generators (PRNG)." },
    "type": "sig  end",
    "module_structure": [ 
      { "comment": "<h6>Basic functions</h6>" }, 
      { "value": 
          { "name": "Random.init",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1025" },
            "info": 
              { "description": "Initialize the generator, using the argument as a seed. The same seed will always yield the same sequence of numbers." },
            "type": "int -> unit",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Random.full_init",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1179" },
            "info": 
              { "description": "Same as <a href=\"{value|Random.init}\" ><span class=\"code\" >Random.init</span></a> but takes more data as seed." },
            "type": "int array -> unit",
            "params": [ 
              { "name": "",
                "type": "int array" } ] } }, 
      { "value": 
          { "name": "Random.self_init",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1273" },
            "info": 
              { "description": "Initialize the generator with a more-or-less random seed chosen in a system-dependent way." },
            "type": "unit -> unit",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Random.bits",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1404" },
            "info": 
              { "description": "Return 30 random bits in a nonnegative integer." },
            "type": "unit -> int",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Random.int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1586" },
            "info": 
              { "description": "<span class=\"code\" >Random.int bound</span> returns a random integer between 0 (inclusive) and <span class=\"code\" >bound</span> (exclusive).  <span class=\"code\" >bound</span> must be greater than 0 and less than 2<sup>30</sup>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Random.int32",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1770" },
            "info": 
              { "description": "<span class=\"code\" >Random.int32 bound</span> returns a random integer between 0 (inclusive) and <span class=\"code\" >bound</span> (exclusive).  <span class=\"code\" >bound</span> must be greater than 0." },
            "type": "Int32.t -> Int32.t",
            "params": [ 
              { "name": "",
                "type": "Int32.t" } ] } }, 
      { "value": 
          { "name": "Random.nativeint",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|1942" },
            "info": 
              { "description": "<span class=\"code\" >Random.nativeint bound</span> returns a random integer between 0 (inclusive) and <span class=\"code\" >bound</span> (exclusive).  <span class=\"code\" >bound</span> must be greater than 0." },
            "type": "Nativeint.t -> Nativeint.t",
            "params": [ 
              { "name": "",
                "type": "Nativeint.t" } ] } }, 
      { "value": 
          { "name": "Random.int64",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|2130" },
            "info": 
              { "description": "<span class=\"code\" >Random.int64 bound</span> returns a random integer between 0 (inclusive) and <span class=\"code\" >bound</span> (exclusive).  <span class=\"code\" >bound</span> must be greater than 0." },
            "type": "Int64.t -> Int64.t",
            "params": [ 
              { "name": "",
                "type": "Int64.t" } ] } }, 
      { "value": 
          { "name": "Random.float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|2302" },
            "info": 
              { "description": "<span class=\"code\" >Random.float bound</span> returns a random floating-point number between 0 (inclusive) and <span class=\"code\" >bound</span> (exclusive).  If <span class=\"code\" >bound</span> is negative, the result is negative or zero.  If <span class=\"code\" >bound</span> is 0, the result is 0." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Random.bool",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|2545" },
            "info": 
              { "description": "<span class=\"code\" >Random.bool ()</span> returns <span class=\"code\" >true</span> or <span class=\"code\" >false</span> with probability 0.5 each." },
            "type": "unit -> bool",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "comment": "<h6>Advanced functions</h6>" }, 
      { "comment": "The functions from module <span class=\"code\" >State</span> manipulate the current state of the random generator explicitely. This allows using one or several deterministic PRNGs, even in a multi-threaded program, without interference from other parts of the program." }, 
      { "module": 
          { "name": "Random.State",
            "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|2945" },
            "info": "",
            "type": "sig  end",
            "module_structure": [ 
              { "type": 
                  { "name": "Random.State.t",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|2971" },
                    "info": 
                      { "description": "The type of PRNG states." },
                    "params": [  ],
                    "kind": 
                      { "type": "abstract" } } }, 
              { "value": 
                  { "name": "Random.State.make",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3010" },
                    "info": 
                      { "description": "Create a new state and initialize it with the given seed." },
                    "type": "int array -> Random.State.t",
                    "params": [ 
                      { "name": "",
                        "type": "int array" } ] } }, 
              { "value": 
                  { "name": "Random.State.make_self_init",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3106" },
                    "info": 
                      { "description": "Create a new state and initialize it with a system-dependent low-entropy seed." },
                    "type": "unit -> Random.State.t",
                    "params": [ 
                      { "name": "",
                        "type": "unit" } ] } }, 
              { "value": 
                  { "name": "Random.State.copy",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3234" },
                    "info": 
                      { "description": "Return a copy of the given state." },
                    "type": "Random.State.t -> Random.State.t",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" } ] } }, 
              { "value": 
                  { "name": "Random.State.bits",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3298" },
                    "info": "",
                    "type": "Random.State.t -> int",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" } ] } }, 
              { "value": 
                  { "name": "Random.State.int",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3320" },
                    "info": "",
                    "type": "Random.State.t -> int -> int",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" }, 
                      { "name": "",
                        "type": "int" } ] } }, 
              { "value": 
                  { "name": "Random.State.int32",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3348" },
                    "info": "",
                    "type": "Random.State.t -> Int32.t -> Int32.t",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" }, 
                      { "name": "",
                        "type": "Int32.t" } ] } }, 
              { "value": 
                  { "name": "Random.State.nativeint",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3386" },
                    "info": "",
                    "type": "Random.State.t -> Nativeint.t -> Nativeint.t",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" }, 
                      { "name": "",
                        "type": "Nativeint.t" } ] } }, 
              { "value": 
                  { "name": "Random.State.int64",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3436" },
                    "info": "",
                    "type": "Random.State.t -> Int64.t -> Int64.t",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" }, 
                      { "name": "",
                        "type": "Int64.t" } ] } }, 
              { "value": 
                  { "name": "Random.State.float",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3474" },
                    "info": "",
                    "type": "Random.State.t -> float -> float",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" }, 
                      { "name": "",
                        "type": "float" } ] } }, 
              { "value": 
                  { "name": "Random.State.bool",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3508" },
                    "info": 
                      { "description": "These functions are the same as the basic functions, except that they use (and update) the given PRNG state instead of the default one." },
                    "type": "Random.State.t -> bool",
                    "params": [ 
                      { "name": "",
                        "type": "Random.State.t" } ] } } ],
            "dependencies": 
              { "uses": [  ] } } }, 
      { "value": 
          { "name": "Random.get_state",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3690" },
            "info": 
              { "description": "Return the current state of the generator used by the basic functions." },
            "type": "unit -> Random.State.t",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Random.set_state",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/random.mli|3801" },
            "info": 
              { "description": "Set the state of the generator used by the basic functions." },
            "type": "Random.State.t -> unit",
            "params": [ 
              { "name": "",
                "type": "Random.State.t" } ] } } ],
    "dependencies": 
      { "uses": [ "Nativeint", "Int64", "Int32" ],
        "used_by": [  ] } } }