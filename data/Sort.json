{ "module": 
  { "name": "Sort",
    "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/sort.mli",
    "location": 
      { "implementation": "unknown",
        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/sort.mli|0" },
    "info": 
      { "description": "Sorting and merging lists.",
        "deprecated": "This module is obsolete and exists only for backward compatibility. The sorting functions in <a href=\"{module|Array}\" ><span class=\"code\" >Array</span></a> and <a href=\"{module|List}\" ><span class=\"code\" >List</span></a> should be used instead. The new functions are faster and use less memory." },
    "type": "sig  end",
    "module_structure": [ 
      { "value": 
          { "name": "Sort.list",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/sort.mli|1194" },
            "info": 
              { "description": "Sort a list in increasing order according to an ordering predicate. The predicate should return <span class=\"code\" >true</span> if its first argument is less than or equal to its second argument." },
            "type": "('a -> 'a -> bool) -> 'a list -> 'a list",
            "params": [ 
              { "name": "",
                "type": "'a -> 'a -> bool" }, 
              { "name": "",
                "type": "'a list" } ] } }, 
      { "value": 
          { "name": "Sort.array",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/sort.mli|1431" },
            "info": 
              { "description": "Sort an array in increasing order according to an ordering predicate. The predicate should return <span class=\"code\" >true</span> if its first argument is less than or equal to its second argument. The array is sorted in place." },
            "type": "('a -> 'a -> bool) -> 'a array -> unit",
            "params": [ 
              { "name": "",
                "type": "'a -> 'a -> bool" }, 
              { "name": "",
                "type": "'a array" } ] } }, 
      { "value": 
          { "name": "Sort.merge",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/sort.mli|1705" },
            "info": 
              { "description": "Merge two lists according to the given predicate. Assuming the two argument lists are sorted according to the predicate, <span class=\"code\" >merge</span> returns a sorted list containing the elements from the two lists. The behavior is undefined if the two argument lists were not sorted." },
            "type": "('a -> 'a -> bool) -> 'a list -> 'a list -> 'a list",
            "params": [ 
              { "name": "",
                "type": "'a -> 'a -> bool" }, 
              { "name": "",
                "type": "'a list" }, 
              { "name": "",
                "type": "'a list" } ] } } ],
    "dependencies": 
      { "uses": [  ],
        "used_by": [  ] } } }