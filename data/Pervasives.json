{ "module": 
  { "name": "Pervasives",
    "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli",
    "location": 
      { "implementation": "unknown",
        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|0" },
    "info": 
      { "description": "The initially opened module.<br></br> This module provides the basic operations over the built-in types (numbers, booleans, strings, exceptions, references, lists, arrays, input-output channels, ...).<br></br> This module is automatically opened at the beginning of each compilation. All components of this module can therefore be referred by their short name, without prefixing them by <span class=\"code\" >Pervasives</span>." },
    "type": "sig  end",
    "module_structure": [ 
      { "comment": "<h6>Exceptions</h6>" }, 
      { "value": 
          { "name": "Pervasives.raise",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|1385" },
            "info": 
              { "description": "Raise the given exception value" },
            "type": "exn -> 'a",
            "params": [ 
              { "name": "",
                "type": "exn" } ] } }, 
      { "value": 
          { "name": "Pervasives.invalid_arg",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|1463" },
            "info": 
              { "description": "Raise exception <span class=\"code\" >Invalid_argument</span> with the given string." },
            "type": "string -> 'a",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.failwith",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|1560" },
            "info": 
              { "description": "Raise exception <span class=\"code\" >Failure</span> with the given string." },
            "type": "string -> 'a",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "exception": 
          { "name": "Pervasives.Exit",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|1645" },
            "info": 
              { "description": "The <span class=\"code\" >Exit</span> exception is not raised by any library function.  It is provided for use in your programs." } } }, 
      { "comment": "<h6>Comparisons</h6>" }, 
      { "value": 
          { "name": "Pervasives.(=)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|1798" },
            "info": 
              { "description": "<span class=\"code\" >e1 = e2</span> tests for structural equality of <span class=\"code\" >e1</span> and <span class=\"code\" >e2</span>. Mutable structures (e.g. references and arrays) are equal if and only if their current contents are structurally equal, even if the two mutable objects are not the same physical object. Equality between functional values raises <span class=\"code\" >Invalid_argument</span>. Equality between cyclic data structures may not terminate." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(<>)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|2231" },
            "info": 
              { "description": "Negation of <a href=\"{value|Pervasives.(=)}\" ><span class=\"code\" >Pervasives.(=)</span></a>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(<)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|2319" },
            "info": 
              { "description": "See <a href=\"{value|Pervasives.(&gt;=)}\" ><span class=\"code\" >Pervasives.(&gt;=)</span></a>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(>)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|2399" },
            "info": 
              { "description": "See <a href=\"{value|Pervasives.(&gt;=)}\" ><span class=\"code\" >Pervasives.(&gt;=)</span></a>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(<=)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|2482" },
            "info": 
              { "description": "See <a href=\"{value|Pervasives.(&gt;=)}\" ><span class=\"code\" >Pervasives.(&gt;=)</span></a>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(>=)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|2564" },
            "info": 
              { "description": "Structural ordering functions. These functions coincide with the usual orderings over integers, characters, strings and floating-point numbers, and extend them to a total ordering over all types. The ordering is compatible with <span class=\"code\" >(=)</span>. As in the case of <span class=\"code\" >(=)</span>, mutable structures are compared by contents. Comparison between functional values raises <span class=\"code\" >Invalid_argument</span>. Comparison between cyclic structures may not terminate." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.compare",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|3071" },
            "info": 
              { "description": "<span class=\"code\" >compare x y</span> returns <span class=\"code\" >0</span> if <span class=\"code\" >x</span> is equal to <span class=\"code\" >y</span>, a negative integer if <span class=\"code\" >x</span> is less than <span class=\"code\" >y</span>, and a positive integer if <span class=\"code\" >x</span> is greater than <span class=\"code\" >y</span>.  The ordering implemented by <span class=\"code\" >compare</span> is compatible with the comparison predicates <span class=\"code\" >=</span>, <span class=\"code\" >&lt;</span> and <span class=\"code\" >&gt;</span> defined above,  with one difference on the treatment of the float value <a href=\"{value|Pervasives.nan}\" ><span class=\"code\" >Pervasives.nan</span></a>.  Namely, the comparison predicates treat <span class=\"code\" >nan</span> as different from any other float value, including itself; while <span class=\"code\" >compare</span> treats <span class=\"code\" >nan</span> as equal to itself and less than any other float value.  This treatment of <span class=\"code\" >nan</span> ensures that <span class=\"code\" >compare</span> defines a total ordering relation.<br></br> <span class=\"code\" >compare</span> applied to functional values may raise <span class=\"code\" >Invalid_argument</span>. <span class=\"code\" >compare</span> applied to cyclic structures may not terminate.<br></br> The <span class=\"code\" >compare</span> function can be used as the comparison function required by the <a href=\"{module|Set.Make}\" ><span class=\"code\" >Set.Make</span></a> and <a href=\"{module|Map.Make}\" ><span class=\"code\" >Map.Make</span></a> functors, as well as the <a href=\"{value|List.sort}\" ><span class=\"code\" >List.sort</span></a> and <a href=\"{value|Array.sort}\" ><span class=\"code\" >Array.sort</span></a> functions." },
            "type": "'a -> 'a -> int",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.min",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|4082" },
            "info": 
              { "description": "Return the smaller of the two arguments. The result is unspecified if one of the arguments contains the float value <span class=\"code\" >nan</span>." },
            "type": "'a -> 'a -> 'a",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.max",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|4246" },
            "info": 
              { "description": "Return the greater of the two arguments. The result is unspecified if one of the arguments contains the float value <span class=\"code\" >nan</span>." },
            "type": "'a -> 'a -> 'a",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(==)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|4410" },
            "info": 
              { "description": "<span class=\"code\" >e1 == e2</span> tests for physical equality of <span class=\"code\" >e1</span> and <span class=\"code\" >e2</span>. On mutable types such as references, arrays, strings, records with mutable fields and objects with mutable instance variables, <span class=\"code\" >e1 == e2</span> is true if and only if physical modification of <span class=\"code\" >e1</span> also affects <span class=\"code\" >e2</span>. On non-mutable types, the behavior of <span class=\"code\" >(==)</span> is implementation-dependent; however, it is guaranteed that <span class=\"code\" >e1 == e2</span> implies <span class=\"code\" >compare e1 e2 = 0</span>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(!=)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|4894" },
            "info": 
              { "description": "Negation of <a href=\"{value|Pervasives.(==)}\" ><span class=\"code\" >Pervasives.(==)</span></a>." },
            "type": "'a -> 'a -> bool",
            "params": [ 
              { "name": "",
                "type": "'a" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "comment": "<h6>Boolean operations</h6>" }, 
      { "value": 
          { "name": "Pervasives.not",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5012" },
            "info": 
              { "description": "The boolean negation." },
            "type": "bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" } ] } }, 
      { "value": 
          { "name": "Pervasives.(&&)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5083" },
            "info": 
              { "description": "The boolean ``and''. Evaluation is sequential, left-to-right: in <span class=\"code\" >e1 &amp;&amp; e2</span>, <span class=\"code\" >e1</span> is evaluated first, and if it returns <span class=\"code\" >false</span>, <span class=\"code\" >e2</span> is not evaluated at all." },
            "type": "bool -> bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "value": 
          { "name": "Pervasives.(&)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5308" },
            "info": 
              { "deprecated": "<a href=\"{value|Pervasives.(&amp;&amp;)}\" ><span class=\"code\" >Pervasives.(&amp;&amp;)</span></a> should be used instead." },
            "type": "bool -> bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "value": 
          { "name": "Pervasives.(||)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5424" },
            "info": 
              { "description": "The boolean ``or''. Evaluation is sequential, left-to-right: in <span class=\"code\" >e1 || e2</span>, <span class=\"code\" >e1</span> is evaluated first, and if it returns <span class=\"code\" >true</span>, <span class=\"code\" >e2</span> is not evaluated at all." },
            "type": "bool -> bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "value": 
          { "name": "Pervasives.(or)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5646" },
            "info": 
              { "deprecated": "<a href=\"{value|Pervasives.(||)}\" ><span class=\"code\" >Pervasives.(||)</span></a> should be used instead." },
            "type": "bool -> bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "comment": "<h6>Integer arithmetic</h6>" }, 
      { "comment": "Integers are 31 bits wide (or 63 bits on 64-bit processors). All operations are taken modulo 2<sup>31</sup> (or 2<sup>63</sup>). They do not fail on overflow." }, 
      { "value": 
          { "name": "Pervasives.(~-)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|5950" },
            "info": 
              { "description": "Unary negation. You can also write <span class=\"code\" >- e</span> instead of <span class=\"code\" >~- e</span>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(~+)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6059" },
            "info": 
              { "description": "Unary addition. You can also write <span class=\"code\" >+ e</span> instead of <span class=\"code\" >~+ e</span>.",
                "since": "3.12.0" },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.succ",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6188" },
            "info": 
              { "description": "<span class=\"code\" >succ x</span> is <span class=\"code\" >x + 1</span>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.pred",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6257" },
            "info": 
              { "description": "<span class=\"code\" >pred x</span> is <span class=\"code\" >x - 1</span>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(+)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6326" },
            "info": 
              { "description": "Integer addition." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(-)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6399" },
            "info": 
              { "description": "Integer subtraction." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.( * )",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6475" },
            "info": 
              { "description": "Integer multiplication." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(/)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6554" },
            "info": 
              { "description": "Integer division. Raise <span class=\"code\" >Division_by_zero</span> if the second argument is 0. Integer division rounds the real quotient of its arguments towards zero. More precisely, if <span class=\"code\" >x &gt;= 0</span> and <span class=\"code\" >y &gt; 0</span>, <span class=\"code\" >x / y</span> is the greatest integer less than or equal to the real quotient of <span class=\"code\" >x</span> by <span class=\"code\" >y</span>.  Moreover, <span class=\"code\" >(- x) / y = x / (- y) = - (x / y)</span>." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(mod)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|6946" },
            "info": 
              { "description": "Integer remainder.  If <span class=\"code\" >y</span> is not zero, the result of <span class=\"code\" >x mod y</span> satisfies the following properties: <span class=\"code\" >x = (x / y) * y + x mod y</span> and <span class=\"code\" >abs(x mod y) &lt;= abs(y) - 1</span>. If <span class=\"code\" >y = 0</span>, <span class=\"code\" >x mod y</span> raises <span class=\"code\" >Division_by_zero</span>. Note that <span class=\"code\" >x mod y</span> is negative only if <span class=\"code\" >x &lt; 0</span>. Raise <span class=\"code\" >Division_by_zero</span> if <span class=\"code\" >y</span> is zero." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.abs",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7322" },
            "info": 
              { "description": "Return the absolute value of the argument.  Note that this may be negative if the argument is <span class=\"code\" >min_int</span>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.max_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7458" },
            "info": 
              { "description": "The greatest representable integer." },
            "type": "int",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.min_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7520" },
            "info": 
              { "description": "The smallest representable integer." },
            "type": "int",
            "params": [  ] } }, 
      { "comment": "<h7>Bitwise operations</h7>" }, 
      { "value": 
          { "name": "Pervasives.(land)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7614" },
            "info": 
              { "description": "Bitwise logical and." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(lor)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7693" },
            "info": 
              { "description": "Bitwise logical or." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(lxor)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7769" },
            "info": 
              { "description": "Bitwise logical exclusive or." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.lnot",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7857" },
            "info": 
              { "description": "Bitwise logical negation." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(lsl)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|7913" },
            "info": 
              { "description": "<span class=\"code\" >n lsl m</span> shifts <span class=\"code\" >n</span> to the left by <span class=\"code\" >m</span> bits. The result is unspecified if <span class=\"code\" >m &lt; 0</span> or <span class=\"code\" >m &gt;= bitsize</span>, where <span class=\"code\" >bitsize</span> is <span class=\"code\" >32</span> on a 32-bit platform and <span class=\"code\" >64</span> on a 64-bit platform." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(lsr)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|8157" },
            "info": 
              { "description": "<span class=\"code\" >n lsr m</span> shifts <span class=\"code\" >n</span> to the right by <span class=\"code\" >m</span> bits. This is a logical shift: zeroes are inserted regardless of the sign of <span class=\"code\" >n</span>. The result is unspecified if <span class=\"code\" >m &lt; 0</span> or <span class=\"code\" >m &gt;= bitsize</span>." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.(asr)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|8402" },
            "info": 
              { "description": "<span class=\"code\" >n asr m</span> shifts <span class=\"code\" >n</span> to the right by <span class=\"code\" >m</span> bits. This is an arithmetic shift: the sign bit of <span class=\"code\" >n</span> is replicated. The result is unspecified if <span class=\"code\" >m &lt; 0</span> or <span class=\"code\" >m &gt;= bitsize</span>." },
            "type": "int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "comment": "<h6>Floating-point arithmetic</h6><br></br> Caml's floating-point numbers follow the IEEE 754 standard, using double precision (64 bits) numbers. Floating-point operations never raise an exception on overflow, underflow, division by zero, etc.  Instead, special IEEE numbers are returned as appropriate, such as <span class=\"code\" >infinity</span> for <span class=\"code\" >1.0 /. 0.0</span>, <span class=\"code\" >neg_infinity</span> for <span class=\"code\" >-1.0 /. 0.0</span>, and <span class=\"code\" >nan</span> (``not a number'') for <span class=\"code\" >0.0 /. 0.0</span>.  These special numbers then propagate through floating-point computations as expected: for instance, <span class=\"code\" >1.0 /. infinity</span> is <span class=\"code\" >0.0</span>, and any arithmetic operation with <span class=\"code\" >nan</span> as argument returns <span class=\"code\" >nan</span> as result." }, 
      { "value": 
          { "name": "Pervasives.(~-.)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9286" },
            "info": 
              { "description": "Unary negation. You can also write <span class=\"code\" >-. e</span> instead of <span class=\"code\" >~-. e</span>." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.(~+.)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9404" },
            "info": 
              { "description": "Unary addition. You can also write <span class=\"code\" >+. e</span> instead of <span class=\"code\" >~+. e</span>.",
                "since": "3.12.0" },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.(+.)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9540" },
            "info": 
              { "description": "Floating-point addition" },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.(-.)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9628" },
            "info": 
              { "description": "Floating-point subtraction" },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.( *. )",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9719" },
            "info": 
              { "description": "Floating-point multiplication" },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.(/.)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9813" },
            "info": 
              { "description": "Floating-point division." },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.( ** )",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|9902" },
            "info": 
              { "description": "Exponentiation." },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.sqrt",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10003" },
            "info": 
              { "description": "Square root." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.exp",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10090" },
            "info": 
              { "description": "Exponential." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.log",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10174" },
            "info": 
              { "description": "Natural logarithm." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.log10",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10264" },
            "info": 
              { "description": "Base 10 logarithm." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.expm1",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10360" },
            "info": 
              { "description": "<span class=\"code\" >expm1 x</span> computes <span class=\"code\" >exp x -. 1.0</span>, giving numerically-accurate results even if <span class=\"code\" >x</span> is close to <span class=\"code\" >0.0</span>.",
                "since": "3.12.0" },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.log1p",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10566" },
            "info": 
              { "description": "<span class=\"code\" >log1p x</span> computes <span class=\"code\" >log(1.0 +. x)</span> (natural logarithm), giving numerically-accurate results even if <span class=\"code\" >x</span> is close to <span class=\"code\" >0.0</span>.",
                "since": "3.12.0" },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.cos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10793" },
            "info": 
              { "description": "Cosine.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.sin",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10897" },
            "info": 
              { "description": "Sine.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.tan",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|10999" },
            "info": 
              { "description": "Tangent.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.acos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|11104" },
            "info": 
              { "description": "Arc cosine.  The argument must fall within the range <span class=\"code\" >[-1.0, 1.0]</span>. Result is in radians and is between <span class=\"code\" >0.0</span> and <span class=\"code\" >pi</span>." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.asin",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|11302" },
            "info": 
              { "description": "Arc sine.  The argument must fall within the range <span class=\"code\" >[-1.0, 1.0]</span>. Result is in radians and is between <span class=\"code\" >-pi/2</span> and <span class=\"code\" >pi/2</span>." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.atan",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|11502" },
            "info": 
              { "description": "Arc tangent. Result is in radians and is between <span class=\"code\" >-pi/2</span> and <span class=\"code\" >pi/2</span>." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.atan2",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|11649" },
            "info": 
              { "description": "<span class=\"code\" >atan x y</span> returns the arc tangent of <span class=\"code\" >y /. x</span>.  The signs of <span class=\"code\" >x</span> and <span class=\"code\" >y</span> are used to determine the quadrant of the result. Result is in radians and is between <span class=\"code\" >-pi</span> and <span class=\"code\" >pi</span>." },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.cosh",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|11919" },
            "info": 
              { "description": "Hyperbolic cosine.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.sinh",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12037" },
            "info": 
              { "description": "Hyperbolic sine.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.tanh",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12153" },
            "info": 
              { "description": "Hyperbolic tangent.  Argument is in radians." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.ceil",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12272" },
            "info": 
              { "description": "Round above to an integer value. <span class=\"code\" >ceil f</span> returns the least integer value greater than or equal to <span class=\"code\" >f</span>. The result is returned as a float." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.floor",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12493" },
            "info": 
              { "description": "Round below to an integer value. <span class=\"code\" >floor f</span> returns the greatest integer value less than or equal to <span class=\"code\" >f</span>. The result is returned as a float." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.abs_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12722" },
            "info": 
              { "description": "<span class=\"code\" >abs_float f</span> returns the absolute value of <span class=\"code\" >f</span>." },
            "type": "float -> float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.mod_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|12829" },
            "info": 
              { "description": "<span class=\"code\" >mod_float a b</span> returns the remainder of <span class=\"code\" >a</span> with respect to <span class=\"code\" >b</span>.  The returned value is <span class=\"code\" >a -. n *. b</span>, where <span class=\"code\" >n</span> is the quotient <span class=\"code\" >a /. b</span> rounded towards zero to an integer." },
            "type": "float -> float -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.frexp",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13098" },
            "info": 
              { "description": "<span class=\"code\" >frexp f</span> returns the pair of the significant and the exponent of <span class=\"code\" >f</span>.  When <span class=\"code\" >f</span> is zero, the significant <span class=\"code\" >x</span> and the exponent <span class=\"code\" >n</span> of <span class=\"code\" >f</span> are equal to zero.  When <span class=\"code\" >f</span> is non-zero, they are defined by <span class=\"code\" >f = x *. 2 ** n</span> and <span class=\"code\" >0.5 &lt;= x &lt; 1.0</span>." },
            "type": "float -> float * int",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.ldexp",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13417" },
            "info": 
              { "description": "<span class=\"code\" >ldexp x n</span> returns <span class=\"code\" >x *. 2 ** n</span>." },
            "type": "float -> int -> float",
            "params": [ 
              { "name": "",
                "type": "float" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.modf",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13520" },
            "info": 
              { "description": "<span class=\"code\" >modf f</span> returns the pair of the fractional and integral part of <span class=\"code\" >f</span>." },
            "type": "float -> float * float",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13660" },
            "info": 
              { "description": "Same as <a href=\"{value|Pervasives.float_of_int}\" ><span class=\"code\" >Pervasives.float_of_int</span></a>." },
            "type": "int -> float",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.float_of_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13750" },
            "info": 
              { "description": "Convert an integer to floating-point." },
            "type": "int -> float",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.truncate",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13849" },
            "info": 
              { "description": "Same as <a href=\"{value|Pervasives.int_of_float}\" ><span class=\"code\" >Pervasives.int_of_float</span></a>." },
            "type": "float -> int",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.int_of_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|13942" },
            "info": 
              { "description": "Truncate the given floating-point number to an integer. The result is unspecified if the argument is <span class=\"code\" >nan</span> or falls outside the range of representable integers." },
            "type": "float -> int",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.infinity",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14170" },
            "info": 
              { "description": "Positive infinity." },
            "type": "float",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.neg_infinity",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14218" },
            "info": 
              { "description": "Negative infinity." },
            "type": "float",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.nan",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14270" },
            "info": 
              { "description": "A special floating-point value denoting the result of an undefined operation such as <span class=\"code\" >0.0 /. 0.0</span>.  Stands for ``not a number''.  Any floating-point operation with <span class=\"code\" >nan</span> as argument returns <span class=\"code\" >nan</span> as result.  As for floating-point comparisons, <span class=\"code\" >=</span>, <span class=\"code\" >&lt;</span>, <span class=\"code\" >&lt;=</span>, <span class=\"code\" >&gt;</span> and <span class=\"code\" >&gt;=</span> return <span class=\"code\" >false</span> and <span class=\"code\" >&lt;&gt;</span> returns <span class=\"code\" >true</span> if one or both of their arguments is <span class=\"code\" >nan</span>." },
            "type": "float",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.max_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14664" },
            "info": 
              { "description": "The largest positive finite value of type <span class=\"code\" >float</span>." },
            "type": "float",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.min_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14745" },
            "info": 
              { "description": "The smallest positive, non-zero, non-denormalized value of type <span class=\"code\" >float</span>." },
            "type": "float",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.epsilon_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|14848" },
            "info": 
              { "description": "The difference between <span class=\"code\" >1.0</span> and the smallest exactly representable floating-point number greater than <span class=\"code\" >1.0</span>." },
            "type": "float",
            "params": [  ] } }, 
      { "type": 
          { "name": "Pervasives.fpclass",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|15001" },
            "info": 
              { "description": "The five classes of floating-point numbers, as determined by the <a href=\"{value|Pervasives.classify_float}\" ><span class=\"code\" >Pervasives.classify_float</span></a> function." },
            "params": [  ],
            "kind": 
              { "type": "variant",
                "private": "false",
                "constructors": [ 
                  { "name": "FP_normal",
                    "description": "Normal number, none of the below",
                    "type": [  ] }, 
                  { "name": "FP_subnormal",
                    "description": "Number very close to 0.0, has reduced precision",
                    "type": [  ] }, 
                  { "name": "FP_zero",
                    "description": "Number is 0.0 or -0.0",
                    "type": [  ] }, 
                  { "name": "FP_infinite",
                    "description": "Number is positive or negative infinity",
                    "type": [  ] }, 
                  { "name": "FP_nan",
                    "description": "Not a number: result of an undefined operation",
                    "type": [  ] } ] } } }, 
      { "value": 
          { "name": "Pervasives.classify_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|15471" },
            "info": 
              { "description": "Return the class of the given floating-point number: normal, subnormal, zero, infinite, or not a number." },
            "type": "float -> Pervasives.fpclass",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "comment": "<h6>String operations</h6><br></br> More string operations are provided in module <a href=\"{module|String}\" ><span class=\"code\" >String</span></a>." }, 
      { "value": 
          { "name": "Pervasives.(^)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|15746" },
            "info": 
              { "description": "String concatenation." },
            "type": "string -> string -> string",
            "params": [ 
              { "name": "",
                "type": "string" }, 
              { "name": "",
                "type": "string" } ] } }, 
      { "comment": "<h6>Character operations</h6><br></br> More character operations are provided in module <a href=\"{module|Char}\" ><span class=\"code\" >Char</span></a>." }, 
      { "value": 
          { "name": "Pervasives.int_of_char",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|15911" },
            "info": 
              { "description": "Return the ASCII code of the argument." },
            "type": "char -> int",
            "params": [ 
              { "name": "",
                "type": "char" } ] } }, 
      { "value": 
          { "name": "Pervasives.char_of_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16007" },
            "info": 
              { "description": "Return the character with the given ASCII code. Raise <span class=\"code\" >Invalid_argument \"char_of_int\"</span> if the argument is outside the range 0--255." },
            "type": "int -> char",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "comment": "<h6>Unit operations</h6>" }, 
      { "value": 
          { "name": "Pervasives.ignore",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16212" },
            "info": 
              { "description": "Discard the value of its argument and return <span class=\"code\" >()</span>. For instance, <span class=\"code\" >ignore(f x)</span> discards the result of the side-effecting function <span class=\"code\" >f</span>.  It is equivalent to <span class=\"code\" >f x; ()</span>, except that the latter may generate a compiler warning; writing <span class=\"code\" >ignore(f x)</span> instead avoids the warning." },
            "type": "'a -> unit",
            "params": [ 
              { "name": "",
                "type": "'a" } ] } }, 
      { "comment": "<h6>String conversion functions</h6>" }, 
      { "value": 
          { "name": "Pervasives.string_of_bool",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16590" },
            "info": 
              { "description": "Return the string representation of a boolean." },
            "type": "bool -> string",
            "params": [ 
              { "name": "",
                "type": "bool" } ] } }, 
      { "value": 
          { "name": "Pervasives.bool_of_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16681" },
            "info": 
              { "description": "Convert the given string to a boolean. Raise <span class=\"code\" >Invalid_argument \"bool_of_string\"</span> if the string is not <span class=\"code\" >\"true\"</span> or <span class=\"code\" >\"false\"</span>." },
            "type": "string -> bool",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.string_of_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16856" },
            "info": 
              { "description": "Return the string representation of an integer, in decimal." },
            "type": "int -> string",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.int_of_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|16958" },
            "info": 
              { "description": "Convert the given string to an integer. The string is read in decimal (by default) or in hexadecimal (if it begins with <span class=\"code\" >0x</span> or <span class=\"code\" >0X</span>), octal (if it begins with <span class=\"code\" >0o</span> or <span class=\"code\" >0O</span>), or binary (if it begins with <span class=\"code\" >0b</span> or <span class=\"code\" >0B</span>). Raise <span class=\"code\" >Failure \"int_of_string\"</span> if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type <span class=\"code\" >int</span>." },
            "type": "string -> int",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.string_of_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|17451" },
            "info": 
              { "description": "Return the string representation of a floating-point number." },
            "type": "float -> string",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.float_of_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|17558" },
            "info": 
              { "description": "Convert the given string to a float.  Raise <span class=\"code\" >Failure \"float_of_string\"</span> if the given string is not a valid representation of a float." },
            "type": "string -> float",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "comment": "<h6>Pair operations</h6>" }, 
      { "value": 
          { "name": "Pervasives.fst",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|17800" },
            "info": 
              { "description": "Return the first component of a pair." },
            "type": "'a * 'b -> 'a",
            "params": [ 
              { "tuple": 
                  { "type": "'a * 'b",
                    "contents": [ 
                      { "name": "",
                        "type": "'a" }, 
                      { "name": "",
                        "type": "'a" } ] } } ] } }, 
      { "value": 
          { "name": "Pervasives.snd",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|17887" },
            "info": 
              { "description": "Return the second component of a pair." },
            "type": "'a * 'b -> 'b",
            "params": [ 
              { "tuple": 
                  { "type": "'a * 'b",
                    "contents": [ 
                      { "name": "",
                        "type": "'a" }, 
                      { "name": "",
                        "type": "'a" } ] } } ] } }, 
      { "comment": "<h6>List operations</h6><br></br> More list operations are provided in module <a href=\"{module|List}\" ><span class=\"code\" >List</span></a>." }, 
      { "value": 
          { "name": "Pervasives.(@)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18061" },
            "info": 
              { "description": "List concatenation." },
            "type": "'a list -> 'a list -> 'a list",
            "params": [ 
              { "name": "",
                "type": "'a list" }, 
              { "name": "",
                "type": "'a list" } ] } }, 
      { "comment": "<h6>Input/output</h6>" }, 
      { "type": 
          { "name": "Pervasives.in_channel",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18162" },
            "info": 
              { "description": "The type of input channel." },
            "params": [  ],
            "kind": 
              { "type": "abstract" } } }, 
      { "type": 
          { "name": "Pervasives.out_channel",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18213" },
            "info": 
              { "description": "The type of output channel." },
            "params": [  ],
            "kind": 
              { "type": "abstract" } } }, 
      { "value": 
          { "name": "Pervasives.stdin",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18261" },
            "info": 
              { "description": "The standard input for the process." },
            "type": "Pervasives.in_channel",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.stdout",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18328" },
            "info": 
              { "description": "The standard output for the process." },
            "type": "Pervasives.out_channel",
            "params": [  ] } }, 
      { "value": 
          { "name": "Pervasives.stderr",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18398" },
            "info": 
              { "description": "The standard error ouput for the process." },
            "type": "Pervasives.out_channel",
            "params": [  ] } }, 
      { "comment": "<h7>Output functions on standard output</h7>" }, 
      { "value": 
          { "name": "Pervasives.print_char",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18522" },
            "info": 
              { "description": "Print a character on standard output." },
            "type": "char -> unit",
            "params": [ 
              { "name": "",
                "type": "char" } ] } }, 
      { "value": 
          { "name": "Pervasives.print_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18598" },
            "info": 
              { "description": "Print a string on standard output." },
            "type": "string -> unit",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.print_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18675" },
            "info": 
              { "description": "Print an integer, in decimal, on standard output." },
            "type": "int -> unit",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.print_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18761" },
            "info": 
              { "description": "Print a floating-point number, in decimal, on standard output." },
            "type": "float -> unit",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.print_endline",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|18864" },
            "info": 
              { "description": "Print a string, followed by a newline character, on standard output and flush standard output." },
            "type": "string -> unit",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.print_newline",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19005" },
            "info": 
              { "description": "Print a newline character on standard output, and flush standard output. This can be used to simulate line buffering of standard output." },
            "type": "unit -> unit",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "comment": "<h7>Output functions on standard error</h7>" }, 
      { "value": 
          { "name": "Pervasives.prerr_char",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19237" },
            "info": 
              { "description": "Print a character on standard error." },
            "type": "char -> unit",
            "params": [ 
              { "name": "",
                "type": "char" } ] } }, 
      { "value": 
          { "name": "Pervasives.prerr_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19312" },
            "info": 
              { "description": "Print a string on standard error." },
            "type": "string -> unit",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.prerr_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19388" },
            "info": 
              { "description": "Print an integer, in decimal, on standard error." },
            "type": "int -> unit",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.prerr_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19473" },
            "info": 
              { "description": "Print a floating-point number, in decimal, on standard error." },
            "type": "float -> unit",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Pervasives.prerr_endline",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19575" },
            "info": 
              { "description": "Print a string, followed by a newline character on standard error and flush standard error." },
            "type": "string -> unit",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.prerr_newline",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19713" },
            "info": 
              { "description": "Print a newline character on standard error, and flush standard error." },
            "type": "unit -> unit",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "comment": "<h7>Input functions on standard input</h7>" }, 
      { "value": 
          { "name": "Pervasives.read_line",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|19875" },
            "info": 
              { "description": "Flush standard output, then read characters from standard input until a newline character is encountered. Return the string of all characters read, without the newline character at the end." },
            "type": "unit -> string",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Pervasives.read_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|20110" },
            "info": 
              { "description": "Flush standard output, then read one line from standard input and convert it to an integer. Raise <span class=\"code\" >Failure \"int_of_string\"</span> if the line read is not a valid representation of an integer." },
            "type": "unit -> int",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Pervasives.read_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|20337" },
            "info": 
              { "description": "Flush standard output, then read one line from standard input and convert it to a floating-point number. The result is unspecified if the line read is not a valid representation of a floating-point number." },
            "type": "unit -> float",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "comment": "<h7>General output functions</h7>" }, 
      { "type": 
          { "name": "Pervasives.open_flag",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|20634" },
            "info": 
              { "description": "Opening modes for <a href=\"{value|Pervasives.open_out_gen}\" ><span class=\"code\" >Pervasives.open_out_gen</span></a> and <a href=\"{value|Pervasives.open_in_gen}\" ><span class=\"code\" >Pervasives.open_in_gen</span></a>." },
            "params": [  ],
            "kind": 
              { "type": "variant",
                "private": "false",
                "constructors": [ 
                  { "name": "Open_rdonly",
                    "description": "open for reading.",
                    "type": [  ] }, 
                  { "name": "Open_wronly",
                    "description": "open for writing.",
                    "type": [  ] }, 
                  { "name": "Open_append",
                    "description": "open for appending: always write at end of file.",
                    "type": [  ] }, 
                  { "name": "Open_creat",
                    "description": "create the file if it does not exist.",
                    "type": [  ] }, 
                  { "name": "Open_trunc",
                    "description": "empty the file if it already exists.",
                    "type": [  ] }, 
                  { "name": "Open_excl",
                    "description": "fail if Open_creat and the file already exists.",
                    "type": [  ] }, 
                  { "name": "Open_binary",
                    "description": "open in binary mode (no conversion).",
                    "type": [  ] }, 
                  { "name": "Open_text",
                    "description": "open in text mode (may perform conversions).",
                    "type": [  ] }, 
                  { "name": "Open_nonblock",
                    "description": "open in non-blocking mode.",
                    "type": [  ] } ] } } }, 
      { "value": 
          { "name": "Pervasives.open_out",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|21301" },
            "info": 
              { "description": "Open the named file for writing, and return a new output channel on that file, positionned at the beginning of the file. The file is truncated to zero length if it already exists. It is created if it does not already exists. Raise <span class=\"code\" >Sys_error</span> if the file could not be opened." },
            "type": "string -> Pervasives.out_channel",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.open_out_bin",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|21634" },
            "info": 
              { "description": "Same as <a href=\"{value|Pervasives.open_out}\" ><span class=\"code\" >Pervasives.open_out</span></a>, but the file is opened in binary mode, so that no translation takes place during writes. On operating systems that do not distinguish between text mode and binary mode, this function behaves like <a href=\"{value|Pervasives.open_out}\" ><span class=\"code\" >Pervasives.open_out</span></a>." },
            "type": "string -> Pervasives.out_channel",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.open_out_gen",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|21944" },
            "info": 
              { "description": "<span class=\"code\" >open_out_gen mode perm filename</span> opens the named file for writing, as described above. The extra argument <span class=\"code\" >mode</span> specify the opening mode. The extra argument <span class=\"code\" >perm</span> specifies the file permissions, in case the file must be created. <a href=\"{value|Pervasives.open_out}\" ><span class=\"code\" >Pervasives.open_out</span></a> and <a href=\"{value|Pervasives.open_out_bin}\" ><span class=\"code\" >Pervasives.open_out_bin</span></a> are special cases of this function." },
            "type": "Pervasives.open_flag list -> int -> string -> Pervasives.out_channel",
            "params": [ 
              { "name": "",
                "type": "Pervasives.open_flag list" }, 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.flush",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|22355" },
            "info": 
              { "description": "Flush the buffer associated with the given output channel, performing all pending writes on that channel. Interactive programs must be careful about flushing standard output and standard error at the right time." },
            "type": "Pervasives.out_channel -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.flush_all",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|22616" },
            "info": 
              { "description": "Flush all open output channels; ignore errors." },
            "type": "unit -> unit",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Pervasives.output_char",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|22700" },
            "info": 
              { "description": "Write the character on the given output channel." },
            "type": "Pervasives.out_channel -> char -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "char" } ] } }, 
      { "value": 
          { "name": "Pervasives.output_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|22803" },
            "info": 
              { "description": "Write the string on the given output channel." },
            "type": "Pervasives.out_channel -> string -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.output",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|22907" },
            "info": 
              { "description": "<span class=\"code\" >output oc buf pos len</span> writes <span class=\"code\" >len</span> characters from string <span class=\"code\" >buf</span>, starting at offset <span class=\"code\" >pos</span>, to the given output channel <span class=\"code\" >oc</span>. Raise <span class=\"code\" >Invalid_argument \"output\"</span> if <span class=\"code\" >pos</span> and <span class=\"code\" >len</span> do not designate a valid substring of <span class=\"code\" >buf</span>." },
            "type": "Pervasives.out_channel -> string -> int -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "string" }, 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.output_byte",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|23206" },
            "info": 
              { "description": "Write one 8-bit integer (as the single character with that code) on the given output channel. The given integer is taken modulo 256." },
            "type": "Pervasives.out_channel -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.output_binary_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|23398" },
            "info": 
              { "description": "Write one integer in binary format (4 bytes, big-endian) on the given output channel. The given integer is taken modulo 2<sup>32</sup>. The only reliable way to read it back is through the <a href=\"{value|Pervasives.input_binary_int}\" ><span class=\"code\" >Pervasives.input_binary_int</span></a> function. The format is compatible across all machines for a given version of Objective Caml." },
            "type": "Pervasives.out_channel -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.output_value",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|23778" },
            "info": 
              { "description": "Write the representation of a structured value of any type to a channel. Circularities and sharing inside the value are detected and preserved. The object can be read back, by the function <a href=\"{value|Pervasives.input_value}\" ><span class=\"code\" >Pervasives.input_value</span></a>. See the description of module <a href=\"{module|Marshal}\" ><span class=\"code\" >Marshal</span></a> for more information. <a href=\"{value|Pervasives.output_value}\" ><span class=\"code\" >Pervasives.output_value</span></a> is equivalent to <a href=\"{none|Marshal.to_channel}\" ><span class=\"code\" >Marshal.to_channel</span></a> with an empty list of flags." },
            "type": "Pervasives.out_channel -> 'a -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.seek_out",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|24220" },
            "info": 
              { "description": "<span class=\"code\" >seek_out chan pos</span> sets the current writing position to <span class=\"code\" >pos</span> for channel <span class=\"code\" >chan</span>. This works only for regular files. On files of other kinds (such as terminals, pipes and sockets), the behavior is unspecified." },
            "type": "Pervasives.out_channel -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.pos_out",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|24490" },
            "info": 
              { "description": "Return the current writing position for the given channel.  Does not work on channels opened with the <span class=\"code\" >Open_append</span> flag (returns unspecified results)." },
            "type": "Pervasives.out_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.out_channel_length",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|24691" },
            "info": 
              { "description": "Return the size (number of characters) of the regular file on which the given channel is opened.  If the channel is opened on a file that is not a regular file, the result is meaningless." },
            "type": "Pervasives.out_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.close_out",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|24938" },
            "info": 
              { "description": "Close the given channel, flushing all buffered write operations. Output functions raise a <span class=\"code\" >Sys_error</span> exception when they are applied to a closed output channel, except <span class=\"code\" >close_out</span> and <span class=\"code\" >flush</span>, which do nothing when applied to an already closed channel. Note that <span class=\"code\" >close_out</span> may raise <span class=\"code\" >Sys_error</span> if the operating system signals an error when flushing or closing." },
            "type": "Pervasives.out_channel -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.close_out_noerr",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|25362" },
            "info": 
              { "description": "Same as <span class=\"code\" >close_out</span>, but ignore all errors." },
            "type": "Pervasives.out_channel -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.set_binary_mode_out",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|25456" },
            "info": 
              { "description": "<span class=\"code\" >set_binary_mode_out oc true</span> sets the channel <span class=\"code\" >oc</span> to binary mode: no translations take place during output. <span class=\"code\" >set_binary_mode_out oc false</span> sets the channel <span class=\"code\" >oc</span> to text mode: depending on the operating system, some translations may take place during output.  For instance, under Windows, end-of-lines will be translated from <span class=\"code\" >\\n</span> to <span class=\"code\" >\\r\\n</span>. This function has no effect under operating systems that do not distinguish between text mode and binary mode." },
            "type": "Pervasives.out_channel -> bool -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.out_channel" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "comment": "<h7>General input functions</h7>" }, 
      { "value": 
          { "name": "Pervasives.open_in",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|26030" },
            "info": 
              { "description": "Open the named file for reading, and return a new input channel on that file, positionned at the beginning of the file. Raise <span class=\"code\" >Sys_error</span> if the file could not be opened." },
            "type": "string -> Pervasives.in_channel",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.open_in_bin",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|26250" },
            "info": 
              { "description": "Same as <a href=\"{value|Pervasives.open_in}\" ><span class=\"code\" >Pervasives.open_in</span></a>, but the file is opened in binary mode, so that no translation takes place during reads. On operating systems that do not distinguish between text mode and binary mode, this function behaves like <a href=\"{value|Pervasives.open_in}\" ><span class=\"code\" >Pervasives.open_in</span></a>." },
            "type": "string -> Pervasives.in_channel",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.open_in_gen",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|26555" },
            "info": 
              { "description": "<span class=\"code\" >open_in_gen mode perm filename</span> opens the named file for reading, as described above. The extra arguments <span class=\"code\" >mode</span> and <span class=\"code\" >perm</span> specify the opening mode and file permissions. <a href=\"{value|Pervasives.open_in}\" ><span class=\"code\" >Pervasives.open_in</span></a> and <a href=\"{value|Pervasives.open_in_bin}\" ><span class=\"code\" >Pervasives.open_in_bin</span></a> are special cases of this function." },
            "type": "Pervasives.open_flag list -> int -> string -> Pervasives.in_channel",
            "params": [ 
              { "name": "",
                "type": "Pervasives.open_flag list" }, 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Pervasives.input_char",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|26899" },
            "info": 
              { "description": "Read one character from the given input channel. Raise <span class=\"code\" >End_of_file</span> if there are no more characters to read." },
            "type": "Pervasives.in_channel -> char",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.input_line",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|27056" },
            "info": 
              { "description": "Read characters from the given input channel, until a newline character is encountered. Return the string of all characters read, without the newline character at the end. Raise <span class=\"code\" >End_of_file</span> if the end of the file is reached at the beginning of line." },
            "type": "Pervasives.in_channel -> string",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.input",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|27366" },
            "info": 
              { "description": "<span class=\"code\" >input ic buf pos len</span> reads up to <span class=\"code\" >len</span> characters from the given channel <span class=\"code\" >ic</span>, storing them in string <span class=\"code\" >buf</span>, starting at character number <span class=\"code\" >pos</span>. It returns the actual number of characters read, between 0 and <span class=\"code\" >len</span> (inclusive). A return value of 0 means that the end of file was reached. A return value between 0 and <span class=\"code\" >len</span> exclusive means that not all requested <span class=\"code\" >len</span> characters were read, either because no more characters were available at that time, or because the implementation found it convenient to do a partial read; <span class=\"code\" >input</span> must be called again to read the remaining characters, if desired.  (See also <a href=\"{value|Pervasives.really_input}\" ><span class=\"code\" >Pervasives.really_input</span></a> for reading exactly <span class=\"code\" >len</span> characters.) Exception <span class=\"code\" >Invalid_argument \"input\"</span> is raised if <span class=\"code\" >pos</span> and <span class=\"code\" >len</span> do not designate a valid substring of <span class=\"code\" >buf</span>." },
            "type": "Pervasives.in_channel -> string -> int -> int -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" }, 
              { "name": "",
                "type": "string" }, 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.really_input",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|28259" },
            "info": 
              { "description": "<span class=\"code\" >really_input ic buf pos len</span> reads <span class=\"code\" >len</span> characters from channel <span class=\"code\" >ic</span>, storing them in string <span class=\"code\" >buf</span>, starting at character number <span class=\"code\" >pos</span>. Raise <span class=\"code\" >End_of_file</span> if the end of file is reached before <span class=\"code\" >len</span> characters have been read. Raise <span class=\"code\" >Invalid_argument \"really_input\"</span> if <span class=\"code\" >pos</span> and <span class=\"code\" >len</span> do not designate a valid substring of <span class=\"code\" >buf</span>." },
            "type": "Pervasives.in_channel -> string -> int -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" }, 
              { "name": "",
                "type": "string" }, 
              { "name": "",
                "type": "int" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.input_byte",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|28676" },
            "info": 
              { "description": "Same as <a href=\"{value|Pervasives.input_char}\" ><span class=\"code\" >Pervasives.input_char</span></a>, but return the 8-bit integer representing the character. Raise <span class=\"code\" >End_of_file</span> if an end of file was reached." },
            "type": "Pervasives.in_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.input_binary_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|28867" },
            "info": 
              { "description": "Read an integer encoded in binary format (4 bytes, big-endian) from the given input channel. See <a href=\"{value|Pervasives.output_binary_int}\" ><span class=\"code\" >Pervasives.output_binary_int</span></a>. Raise <span class=\"code\" >End_of_file</span> if an end of file was reached while reading the integer." },
            "type": "Pervasives.in_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.input_value",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|29132" },
            "info": 
              { "description": "Read the representation of a structured value, as produced by <a href=\"{value|Pervasives.output_value}\" ><span class=\"code\" >Pervasives.output_value</span></a>, and return the corresponding value. This function is identical to <a href=\"{none|Marshal.from_channel}\" ><span class=\"code\" >Marshal.from_channel</span></a>; see the description of module <a href=\"{module|Marshal}\" ><span class=\"code\" >Marshal</span></a> for more information, in particular concerning the lack of type safety." },
            "type": "Pervasives.in_channel -> 'a",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.seek_in",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|29481" },
            "info": 
              { "description": "<span class=\"code\" >seek_in chan pos</span> sets the current reading position to <span class=\"code\" >pos</span> for channel <span class=\"code\" >chan</span>. This works only for regular files. On files of other kinds, the behavior is unspecified." },
            "type": "Pervasives.in_channel -> int -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.pos_in",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|29706" },
            "info": 
              { "description": "Return the current reading position for the given channel." },
            "type": "Pervasives.in_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.in_channel_length",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|29804" },
            "info": 
              { "description": "Return the size (number of characters) of the regular file on which the given channel is opened.  If the channel is opened on a file that is not a regular file, the result is meaningless. The returned size does not take into account the end-of-line translations that can be performed when reading from a channel opened in text mode." },
            "type": "Pervasives.in_channel -> int",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.close_in",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|30207" },
            "info": 
              { "description": "Close the given channel.  Input functions raise a <span class=\"code\" >Sys_error</span> exception when they are applied to a closed input channel, except <span class=\"code\" >close_in</span>, which does nothing when applied to an already closed channel.  Note that <span class=\"code\" >close_in</span> may raise <span class=\"code\" >Sys_error</span> if the operating system signals an error." },
            "type": "Pervasives.in_channel -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.close_in_noerr",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|30545" },
            "info": 
              { "description": "Same as <span class=\"code\" >close_in</span>, but ignore all errors." },
            "type": "Pervasives.in_channel -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" } ] } }, 
      { "value": 
          { "name": "Pervasives.set_binary_mode_in",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|30636" },
            "info": 
              { "description": "<span class=\"code\" >set_binary_mode_in ic true</span> sets the channel <span class=\"code\" >ic</span> to binary mode: no translations take place during input. <span class=\"code\" >set_binary_mode_out ic false</span> sets the channel <span class=\"code\" >ic</span> to text mode: depending on the operating system, some translations may take place during input.  For instance, under Windows, end-of-lines will be translated from <span class=\"code\" >\\r\\n</span> to <span class=\"code\" >\\n</span>. This function has no effect under operating systems that do not distinguish between text mode and binary mode." },
            "type": "Pervasives.in_channel -> bool -> unit",
            "params": [ 
              { "name": "",
                "type": "Pervasives.in_channel" }, 
              { "name": "",
                "type": "bool" } ] } }, 
      { "comment": "<h7>Operations on large files</h7>" }, 
      { "module": 
          { "name": "Pervasives.LargeFile",
            "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31207" },
            "info": 
              { "description": "Operations on large files. This sub-module provides 64-bit variants of the channel functions that manipulate file positions and file sizes.  By representing positions and sizes by 64-bit integers (type <span class=\"code\" >int64</span>) instead of regular integers (type <span class=\"code\" >int</span>), these alternate functions allow operating on files whose sizes are greater than <span class=\"code\" >max_int</span>." },
            "type": "sig  end",
            "module_structure": [ 
              { "value": 
                  { "name": "Pervasives.LargeFile.seek_out",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31236" },
                    "info": "",
                    "type": "Pervasives.out_channel -> int64 -> unit",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.out_channel" }, 
                      { "name": "",
                        "type": "int64" } ] } }, 
              { "value": 
                  { "name": "Pervasives.LargeFile.pos_out",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31284" },
                    "info": "",
                    "type": "Pervasives.out_channel -> int64",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.out_channel" } ] } }, 
              { "value": 
                  { "name": "Pervasives.LargeFile.out_channel_length",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31323" },
                    "info": "",
                    "type": "Pervasives.out_channel -> int64",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.out_channel" } ] } }, 
              { "value": 
                  { "name": "Pervasives.LargeFile.seek_in",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31373" },
                    "info": "",
                    "type": "Pervasives.in_channel -> int64 -> unit",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.in_channel" }, 
                      { "name": "",
                        "type": "int64" } ] } }, 
              { "value": 
                  { "name": "Pervasives.LargeFile.pos_in",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31419" },
                    "info": "",
                    "type": "Pervasives.in_channel -> int64",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.in_channel" } ] } }, 
              { "value": 
                  { "name": "Pervasives.LargeFile.in_channel_length",
                    "location": 
                      { "implementation": "unknown",
                        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31456" },
                    "info": "",
                    "type": "Pervasives.in_channel -> int64",
                    "params": [ 
                      { "name": "",
                        "type": "Pervasives.in_channel" } ] } } ],
            "dependencies": 
              { "uses": [  ] } } }, 
      { "comment": "<h6>References</h6>" }, 
      { "type": 
          { "name": "Pervasives.ref",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|31896" },
            "info": 
              { "description": "The type of references (mutable indirection cells) containing a value of type <span class=\"code\" >'a</span>." },
            "params": [ 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'a" } ],
            "kind": 
              { "type": "record",
                "private": "false",
                "fields": [ 
                  { "name": "contents",
                    "mutable": true,
                    "type": "'a" } ] } } }, 
      { "value": 
          { "name": "Pervasives.ref",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|32027" },
            "info": 
              { "description": "Return a fresh reference containing the given value." },
            "type": "'a -> 'a Pervasives.ref",
            "params": [ 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.(!)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|32133" },
            "info": 
              { "description": "<span class=\"code\" >!r</span> returns the current contents of reference <span class=\"code\" >r</span>. Equivalent to <span class=\"code\" >fun r -&gt; r.contents</span>." },
            "type": "'a Pervasives.ref -> 'a",
            "params": [ 
              { "name": "",
                "type": "'a Pervasives.ref" } ] } }, 
      { "value": 
          { "name": "Pervasives.(:=)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|32275" },
            "info": 
              { "description": "<span class=\"code\" >r := a</span> stores the value of <span class=\"code\" >a</span> in reference <span class=\"code\" >r</span>. Equivalent to <span class=\"code\" >fun r v -&gt; r.contents &lt;- v</span>." },
            "type": "'a Pervasives.ref -> 'a -> unit",
            "params": [ 
              { "name": "",
                "type": "'a Pervasives.ref" }, 
              { "name": "",
                "type": "'a" } ] } }, 
      { "value": 
          { "name": "Pervasives.incr",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|32435" },
            "info": 
              { "description": "Increment the integer contained in the given reference. Equivalent to <span class=\"code\" >fun r -&gt; r := succ !r</span>." },
            "type": "int Pervasives.ref -> unit",
            "params": [ 
              { "name": "",
                "type": "int Pervasives.ref" } ] } }, 
      { "value": 
          { "name": "Pervasives.decr",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|32583" },
            "info": 
              { "description": "Decrement the integer contained in the given reference. Equivalent to <span class=\"code\" >fun r -&gt; r := pred !r</span>." },
            "type": "int Pervasives.ref -> unit",
            "params": [ 
              { "name": "",
                "type": "int Pervasives.ref" } ] } }, 
      { "comment": "<h6>Operations on format strings</h6>" }, 
      { "comment": "Format strings are used to read and print data using formatted input functions in module <a href=\"{module|Scanf}\" ><span class=\"code\" >Scanf</span></a> and formatted output in modules <a href=\"{module|Printf}\" ><span class=\"code\" >Printf</span></a> and <a href=\"{module|Format}\" ><span class=\"code\" >Format</span></a>." }, 
      { "type": 
          { "name": "Pervasives.format4",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|33439" },
            "info": 
              { "description": "Format strings have a general and highly polymorphic type <span class=\"code\" >('a, 'b, 'c, 'd, 'e, 'f) format6</span>. Type <span class=\"code\" >format6</span> is built in. The two simplified types, <span class=\"code\" >format</span> and <span class=\"code\" >format4</span> below are included for backward compatibility with earlier releases of Objective Caml. <span class=\"code\" >'a</span> is the type of the parameters of the format, <span class=\"code\" >'c</span> is the result type for the \"printf\"-style function, and <span class=\"code\" >'b</span> is the type of the first argument given to <span class=\"code\" >%a</span> and <span class=\"code\" >%t</span> printing functions." },
            "params": [ 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'a" }, 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'b" }, 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'c" }, 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'d" } ],
            "kind": 
              { "type": "abstract" },
            "manifest": "('a, 'b, 'c, 'c, 'c, 'd) format6" } }, 
      { "type": 
          { "name": "Pervasives.format",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|33505" },
            "info": "",
            "params": [ 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'e" }, 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'f" }, 
              { "covariant": "true",
                "contravariant": "true",
                "type": "'g" } ],
            "kind": 
              { "type": "abstract" },
            "manifest": "('a, 'b, 'c, 'c) Pervasives.format4" } }, 
      { "value": 
          { "name": "Pervasives.string_of_format",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|33553" },
            "info": 
              { "description": "Converts a format string into a string." },
            "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 -> string",
            "params": [ 
              { "name": "",
                "type": "('a, 'b, 'c, 'd, 'e, 'f) format6" } ] } }, 
      { "value": 
          { "name": "Pervasives.format_of_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|33667" },
            "info": 
              { "description": "<span class=\"code\" >format_of_string s</span> returns a format string read from the string literal <span class=\"code\" >s</span>." },
            "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 -> ('a, 'b, 'c, 'd, 'e, 'f) format6",
            "params": [ 
              { "name": "",
                "type": "('a, 'b, 'c, 'd, 'e, 'f) format6" } ] } }, 
      { "value": 
          { "name": "Pervasives.(^^)",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|33873" },
            "info": 
              { "description": "<span class=\"code\" >f1 ^^ f2</span> catenates formats <span class=\"code\" >f1</span> and <span class=\"code\" >f2</span>.  The result is a format that accepts arguments from <span class=\"code\" >f1</span>, then arguments from <span class=\"code\" >f2</span>." },
            "type": "('a, 'b, 'c, 'd, 'e, 'f) format6 ->\n  ('f, 'b, 'c, 'e, 'g, 'h) format6 -> ('a, 'b, 'c, 'd, 'g, 'h) format6",
            "params": [ 
              { "name": "",
                "type": "('a, 'b, 'c, 'd, 'e, 'f) format6" }, 
              { "name": "",
                "type": "('a, 'b, 'c, 'd, 'e, 'f) format6" } ] } }, 
      { "comment": "<h6>Program termination</h6>" }, 
      { "value": 
          { "name": "Pervasives.exit",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|34180" },
            "info": 
              { "description": "Terminate the process, returning the given status code to the operating system: usually 0 to indicate no errors, and a small positive integer to indicate failure. All open output channels are flushed with flush_all. An implicit <span class=\"code\" >exit 0</span> is performed each time a program terminates normally.  An implicit <span class=\"code\" >exit 2</span> is performed if the program terminates early because of an uncaught exception." },
            "type": "int -> 'a",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Pervasives.at_exit",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/pervasives.mli|34619" },
            "info": 
              { "description": "Register the given function to be called at program termination time. The functions registered with <span class=\"code\" >at_exit</span> will be called when the program executes <a href=\"{value|Pervasives.exit}\" ><span class=\"code\" >Pervasives.exit</span></a>, or terminates, either normally or because of an uncaught exception. The functions are called in ``last in, first out'' order: the function most recently added with <span class=\"code\" >at_exit</span> is called first." },
            "type": "(unit -> unit) -> unit",
            "params": [ 
              { "name": "",
                "type": "unit -> unit" } ] } } ],
    "dependencies": 
      { "uses": [  ],
        "used_by": [ "Sys", "Scanf", "Format", "Printf" ] } } }