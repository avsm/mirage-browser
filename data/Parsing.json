{ "module": 
  { "name": "Parsing",
    "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli",
    "location": 
      { "implementation": "unknown",
        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|0" },
    "info": 
      { "description": "The run-time library for parsers generated by <span class=\"code\" >ocamlyacc</span>." },
    "type": "sig  end",
    "module_structure": [ 
      { "value": 
          { "name": "Parsing.symbol_start",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1017" },
            "info": 
              { "description": "<span class=\"code\" >symbol_start</span> and <a href=\"{value|Parsing.symbol_end}\" ><span class=\"code\" >Parsing.symbol_end</span></a> are to be called in the action part of a grammar rule only. They return the offset of the string that matches the left-hand side of the rule: <span class=\"code\" >symbol_start()</span> returns the offset of the first character; <span class=\"code\" >symbol_end()</span> returns the offset after the last character. The first character in a file is at offset 0." },
            "type": "unit -> int",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Parsing.symbol_end",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1420" },
            "info": 
              { "description": "See <a href=\"{value|Parsing.symbol_start}\" ><span class=\"code\" >Parsing.symbol_start</span></a>." },
            "type": "unit -> int",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Parsing.rhs_start",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1486" },
            "info": 
              { "description": "Same as <a href=\"{value|Parsing.symbol_start}\" ><span class=\"code\" >Parsing.symbol_start</span></a> and <a href=\"{value|Parsing.symbol_end}\" ><span class=\"code\" >Parsing.symbol_end</span></a>, but return the offset of the string matching the <span class=\"code\" >n</span>th item on the right-hand side of the rule, where <span class=\"code\" >n</span> is the integer parameter to <span class=\"code\" >rhs_start</span> and <span class=\"code\" >rhs_end</span>. <span class=\"code\" >n</span> is 1 for the leftmost item." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Parsing.rhs_end",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1782" },
            "info": 
              { "description": "See <a href=\"{value|Parsing.rhs_start}\" ><span class=\"code\" >Parsing.rhs_start</span></a>." },
            "type": "int -> int",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Parsing.symbol_start_pos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1841" },
            "info": 
              { "description": "Same as <span class=\"code\" >symbol_start</span>, but return a <span class=\"code\" >position</span> instead of an offset." },
            "type": "unit -> Lexing.position",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Parsing.symbol_end_pos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|1968" },
            "info": 
              { "description": "Same as <span class=\"code\" >symbol_end</span>, but return a <span class=\"code\" >position</span> instead of an offset." },
            "type": "unit -> Lexing.position",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "value": 
          { "name": "Parsing.rhs_start_pos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|2089" },
            "info": 
              { "description": "Same as <span class=\"code\" >rhs_start</span>, but return a <span class=\"code\" >position</span> instead of an offset." },
            "type": "int -> Lexing.position",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Parsing.rhs_end_pos",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|2207" },
            "info": 
              { "description": "Same as <span class=\"code\" >rhs_end</span>, but return a <span class=\"code\" >position</span> instead of an offset." },
            "type": "int -> Lexing.position",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Parsing.clear_parser",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|2321" },
            "info": 
              { "description": "Empty the parser stack. Call it just after a parsing function has returned, to remove all pointers from the parser stack to structures that were built by semantic actions during parsing. This is optional, but lowers the memory requirements of the programs." },
            "type": "unit -> unit",
            "params": [ 
              { "name": "",
                "type": "unit" } ] } }, 
      { "exception": 
          { "name": "Parsing.Parse_error",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|2630" },
            "info": 
              { "description": "Raised when a parser encounters a syntax error. Can also be raised from the action part of a grammar rule, to initiate error recovery." } } }, 
      { "value": 
          { "name": "Parsing.set_trace",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/parsing.mli|2801" },
            "info": 
              { "description": "Control debugging support for <span class=\"code\" >ocamlyacc</span>-generated parsers. After <span class=\"code\" >Parsing.set_trace true</span>, the pushdown automaton that executes the parsers prints a trace of its actions (reading a token, shifting a state, reducing by a rule) on standard output. <span class=\"code\" >Parsing.set_trace false</span> turns this debugging trace off. The boolean returned is the previous state of the trace flag.",
                "since": "3.11.0" },
            "type": "bool -> bool",
            "params": [ 
              { "name": "",
                "type": "bool" } ] } } ],
    "dependencies": 
      { "uses": [ "Obj", "Lexing" ],
        "used_by": [  ] } } }