{ "module": 
  { "name": "Int64",
    "file": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli",
    "location": 
      { "implementation": "unknown",
        "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|0" },
    "info": 
      { "description": "64-bit integers.<br></br> This module provides operations on the type <span class=\"code\" >int64</span> of signed 64-bit integers.  Unlike the built-in <span class=\"code\" >int</span> type, the type <span class=\"code\" >int64</span> is guaranteed to be exactly 64-bit wide on all platforms.  All arithmetic operations over <span class=\"code\" >int64</span> are taken modulo 2<sup>64</sup><br></br> Performance notice: values of type <span class=\"code\" >int64</span> occupy more memory space than values of type <span class=\"code\" >int</span>, and arithmetic operations on <span class=\"code\" >int64</span> are generally slower than those on <span class=\"code\" >int</span>.  Use <span class=\"code\" >int64</span> only when the application requires exact 64-bit arithmetic." },
    "type": "sig  end",
    "module_structure": [ 
      { "value": 
          { "name": "Int64.zero",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1499" },
            "info": 
              { "description": "The 64-bit integer 0." },
            "type": "int64",
            "params": [  ] } }, 
      { "value": 
          { "name": "Int64.one",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1546" },
            "info": 
              { "description": "The 64-bit integer 1." },
            "type": "int64",
            "params": [  ] } }, 
      { "value": 
          { "name": "Int64.minus_one",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1592" },
            "info": 
              { "description": "The 64-bit integer -1." },
            "type": "int64",
            "params": [  ] } }, 
      { "value": 
          { "name": "Int64.neg",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1645" },
            "info": 
              { "description": "Unary negation." },
            "type": "int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.add",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1714" },
            "info": 
              { "description": "Addition." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.sub",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1786" },
            "info": 
              { "description": "Subtraction." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.mul",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1861" },
            "info": 
              { "description": "Multiplication." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.div",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|1939" },
            "info": 
              { "description": "Integer division.  Raise <span class=\"code\" >Division_by_zero</span> if the second argument is zero.  This division rounds the real quotient of its arguments towards zero, as specified for <a href=\"{value|Pervasives.(/)}\" ><span class=\"code\" >Pervasives.(/)</span></a>." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.rem",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2190" },
            "info": 
              { "description": "Integer remainder.  If <span class=\"code\" >y</span> is not zero, the result of <span class=\"code\" >Int64.rem x y</span> satisfies the following property: <span class=\"code\" >x = Int64.add (Int64.mul (Int64.div x y) y) (Int64.rem x y)</span>. If <span class=\"code\" >y = 0</span>, <span class=\"code\" >Int64.rem x y</span> raises <span class=\"code\" >Division_by_zero</span>." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.succ",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2483" },
            "info": 
              { "description": "Successor.  <span class=\"code\" >Int64.succ x</span> is <span class=\"code\" >Int64.add x Int64.one</span>." },
            "type": "int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.pred",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2572" },
            "info": 
              { "description": "Predecessor.  <span class=\"code\" >Int64.pred x</span> is <span class=\"code\" >Int64.sub x Int64.one</span>." },
            "type": "int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.abs",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2663" },
            "info": 
              { "description": "Return the absolute value of its argument." },
            "type": "int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.max_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2739" },
            "info": 
              { "description": "The greatest representable 64-bit integer, 2<sup>63</sup> - 1." },
            "type": "int64",
            "params": [  ] } }, 
      { "value": 
          { "name": "Int64.min_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2822" },
            "info": 
              { "description": "The smallest representable 64-bit integer, -2<sup>63</sup>." },
            "type": "int64",
            "params": [  ] } }, 
      { "value": 
          { "name": "Int64.logand",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2902" },
            "info": 
              { "description": "Bitwise logical and." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.logor",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|2988" },
            "info": 
              { "description": "Bitwise logical or." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.logxor",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3071" },
            "info": 
              { "description": "Bitwise logical exclusive or." },
            "type": "int64 -> int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.lognot",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3166" },
            "info": 
              { "description": "Bitwise logical negation" },
            "type": "int64 -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.shift_left",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3227" },
            "info": 
              { "description": "<span class=\"code\" >Int64.shift_left x y</span> shifts <span class=\"code\" >x</span> to the left by <span class=\"code\" >y</span> bits. The result is unspecified if <span class=\"code\" >y &lt; 0</span> or <span class=\"code\" >y &gt;= 64</span>." },
            "type": "int64 -> int -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Int64.shift_right",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3407" },
            "info": 
              { "description": "<span class=\"code\" >Int64.shift_right x y</span> shifts <span class=\"code\" >x</span> to the right by <span class=\"code\" >y</span> bits. This is an arithmetic shift: the sign bit of <span class=\"code\" >x</span> is replicated and inserted in the vacated bits. The result is unspecified if <span class=\"code\" >y &lt; 0</span> or <span class=\"code\" >y &gt;= 64</span>." },
            "type": "int64 -> int -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Int64.shift_right_logical",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3693" },
            "info": 
              { "description": "<span class=\"code\" >Int64.shift_right_logical x y</span> shifts <span class=\"code\" >x</span> to the right by <span class=\"code\" >y</span> bits. This is a logical shift: zeroes are inserted in the vacated bits regardless of the sign of <span class=\"code\" >x</span>. The result is unspecified if <span class=\"code\" >y &lt; 0</span> or <span class=\"code\" >y &gt;= 64</span>." },
            "type": "int64 -> int -> int64",
            "params": [ 
              { "name": "",
                "type": "int64" }, 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Int64.of_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|3994" },
            "info": 
              { "description": "Convert the given integer (type <span class=\"code\" >int</span>) to a 64-bit integer (type <span class=\"code\" >int64</span>)." },
            "type": "int -> int64",
            "params": [ 
              { "name": "",
                "type": "int" } ] } }, 
      { "value": 
          { "name": "Int64.to_int",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|4130" },
            "info": 
              { "description": "Convert the given 64-bit integer (type <span class=\"code\" >int64</span>) to an integer (type <span class=\"code\" >int</span>).  On 64-bit platforms, the 64-bit integer is taken modulo 2<sup>63</sup>, i.e. the high-order bit is lost during the conversion.  On 32-bit platforms, the 64-bit integer is taken modulo 2<sup>31</sup>, i.e. the top 33 bits are lost during the conversion." },
            "type": "int64 -> int",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.of_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|4516" },
            "info": 
              { "description": "Convert the given floating-point number to a 64-bit integer, discarding the fractional part (truncate towards 0). The result of the conversion is undefined if, after truncation, the number is outside the range [<a href=\"{value|Int64.min_int}\" ><span class=\"code\" >Int64.min_int</span></a>, <a href=\"{value|Int64.max_int}\" ><span class=\"code\" >Int64.max_int</span></a>]." },
            "type": "float -> int64",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Int64.to_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|4842" },
            "info": 
              { "description": "Convert the given 64-bit integer to a floating-point number." },
            "type": "int64 -> float",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.of_int32",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|4971" },
            "info": 
              { "description": "Convert the given 32-bit integer (type <span class=\"code\" >int32</span>) to a 64-bit integer (type <span class=\"code\" >int64</span>)." },
            "type": "int32 -> int64",
            "params": [ 
              { "name": "",
                "type": "int32" } ] } }, 
      { "value": 
          { "name": "Int64.to_int32",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|5121" },
            "info": 
              { "description": "Convert the given 64-bit integer (type <span class=\"code\" >int64</span>) to a 32-bit integer (type <span class=\"code\" >int32</span>). The 64-bit integer is taken modulo 2<sup>32</sup>, i.e. the top 32 bits are lost during the conversion." },
            "type": "int64 -> int32",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.of_nativeint",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|5374" },
            "info": 
              { "description": "Convert the given native integer (type <span class=\"code\" >nativeint</span>) to a 64-bit integer (type <span class=\"code\" >int64</span>)." },
            "type": "nativeint -> int64",
            "params": [ 
              { "name": "",
                "type": "nativeint" } ] } }, 
      { "value": 
          { "name": "Int64.to_nativeint",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|5540" },
            "info": 
              { "description": "Convert the given 64-bit integer (type <span class=\"code\" >int64</span>) to a native integer.  On 32-bit platforms, the 64-bit integer is taken modulo 2<sup>32</sup>.  On 64-bit platforms, the conversion is exact." },
            "type": "int64 -> nativeint",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.of_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|5805" },
            "info": 
              { "description": "Convert the given string to a 64-bit integer. The string is read in decimal (by default) or in hexadecimal, octal or binary if the string begins with <span class=\"code\" >0x</span>, <span class=\"code\" >0o</span> or <span class=\"code\" >0b</span> respectively. Raise <span class=\"code\" >Failure \"int_of_string\"</span> if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type <span class=\"code\" >int64</span>." },
            "type": "string -> int64",
            "params": [ 
              { "name": "",
                "type": "string" } ] } }, 
      { "value": 
          { "name": "Int64.to_string",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|6264" },
            "info": 
              { "description": "Return the string representation of its argument, in decimal." },
            "type": "int64 -> string",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "value": 
          { "name": "Int64.bits_of_float",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|6366" },
            "info": 
              { "description": "Return the internal representation of the given float according to the IEEE 754 floating-point ``double format'' bit layout. Bit 63 of the result represents the sign of the float; bits 62 to 52 represent the (biased) exponent; bits 51 to 0 represent the mantissa." },
            "type": "float -> int64",
            "params": [ 
              { "name": "",
                "type": "float" } ] } }, 
      { "value": 
          { "name": "Int64.float_of_bits",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|6719" },
            "info": 
              { "description": "Return the floating-point number whose internal representation, according to the IEEE 754 floating-point ``double format'' bit layout, is the given <span class=\"code\" >int64</span>." },
            "type": "int64 -> float",
            "params": [ 
              { "name": "",
                "type": "int64" } ] } }, 
      { "type": 
          { "name": "Int64.t",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|6964" },
            "info": 
              { "description": "An alias for the type of 64-bit integers." },
            "params": [  ],
            "kind": 
              { "type": "abstract" },
            "manifest": "int64" } }, 
      { "value": 
          { "name": "Int64.compare",
            "location": 
              { "implementation": "unknown",
                "interface": "/Users/avsm/src/git/avsm/mirage/lib/_build/unix-socket/std/int64.mli|7024" },
            "info": 
              { "description": "The comparison function for 64-bit integers, with the same specification as <a href=\"{value|Pervasives.compare}\" ><span class=\"code\" >Pervasives.compare</span></a>.  Along with the type <span class=\"code\" >t</span>, this function <span class=\"code\" >compare</span> allows the module <span class=\"code\" >Int64</span> to be passed as argument to the functors <a href=\"{module|Set.Make}\" ><span class=\"code\" >Set.Make</span></a> and <a href=\"{module|Map.Make}\" ><span class=\"code\" >Map.Make</span></a>." },
            "type": "Int64.t -> Int64.t -> int",
            "params": [ 
              { "name": "",
                "type": "Int64.t" }, 
              { "name": "",
                "type": "Int64.t" } ] } } ],
    "dependencies": 
      { "uses": [  ],
        "used_by": [ "Random" ] } } }